{"ast":null,"code":"var _jsxFileName = \"/Users/yoonezi/Documents/fe/velogFE/src/pages/WritePost.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Button, Form, Select, Upload, Space, Tag, Tooltip, theme } from \"antd\";\nimport { UploadOutlined } from \"@ant-design/icons\";\nimport Header from \"../Common/Header/Header\";\nimport NavHeader from \"../Common/Header/NavHeader/NavHeader\";\nimport styled from \"styled-components\";\nimport Layouts from \"../Common/Layout\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport { InputRef } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\nconst formItemLayout = {\n  labelCol: {\n    span: 6\n  },\n  wrapperCol: {\n    span: 14\n  }\n};\nconst normFile = e => {\n  console.log(\"Upload event:\", e);\n  if (Array.isArray(e)) {\n    return e;\n  }\n  return e === null || e === void 0 ? void 0 : e.fileList;\n};\nconst onFinish = values => {\n  console.log(\"Received values of form: \", values);\n};\nexport default function WritePost() {\n  _s();\n  const [form] = Form.useForm();\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [url, setUrl] = useState(false);\n  const [uploadedImages, setUploadedImages] = useState([]);\n  const {\n    token\n  } = theme.useToken();\n  const [tags, setTags] = useState([\"Unremovable\", \"Tag 2\", \"Tag 3\"]);\n  const [inputVisible, setInputVisible] = useState(false);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [editInputIndex, setEditInputIndex] = useState(-1);\n  const [editInputValue, setEditInputValue] = useState(\"\");\n  const inputRef = useRef(null);\n  const editInputRef = useRef(null);\n  const navigate = useNavigate();\n  const handleTitleChange = event => {\n    setTitle(event.currentTarget.value);\n    console.log(\"title: \", event.currentTarget.value);\n  };\n  const handleContentChange = event => {\n    setContent(event.currentTarget.value);\n    console.log(\"content: \", event.currentTarget.value);\n  };\n  const handleCategoryChange = value => {\n    setCategory(value);\n    console.log(\"category: \", value);\n  };\n  const handleWritePost = async postParam => {\n    try {\n      const response = await axios.post(\"http://localhost:8080/hello\", postParam\n      // {\n      //   title,\n      //   content,\n      // }\n      );\n\n      // navigate(\"/\");\n      // window.location.replace(\"/\");\n      console.log(response);\n    } catch (error) {\n      console.log(\"실패하였습니다\", error);\n    }\n  };\n  const handleImageUpload = async file => {\n    try {\n      const formData = new FormData();\n      formData.append(\"multipartFile\", file);\n      const response = await axios.post(\"http://localhost:8080/api/upload/image/post\", formData);\n      console.log(\"Image upload response:\", response);\n\n      // Update the uploadedImages state with the new image\n      setUploadedImages(prevImages => [...prevImages, {\n        url: response.data.url,\n        uid: file.uid,\n        name: file.name,\n        status: \"done\"\n      }]);\n      return response.data.url;\n    } catch (error) {\n      console.error(\"Image upload failed:\", error);\n      throw error;\n    }\n  };\n  useEffect(() => {\n    if (inputVisible) {\n      var _inputRef$current;\n      (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n    }\n  }, [inputVisible]);\n  useEffect(() => {\n    var _editInputRef$current;\n    (_editInputRef$current = editInputRef.current) === null || _editInputRef$current === void 0 ? void 0 : _editInputRef$current.focus();\n  }, [editInputValue]);\n  const handleClose = removedTag => {\n    const newTags = tags.filter(tag => tag !== removedTag);\n    console.log(newTags);\n    setTags(newTags);\n  };\n  const showInput = () => {\n    setInputVisible(true);\n  };\n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n  };\n  const handleInputConfirm = () => {\n    if (inputValue && !tags.includes(inputValue)) {\n      setTags([...tags, inputValue]);\n    }\n    setInputVisible(false);\n    setInputValue(\"\");\n  };\n  const handleEditInputChange = event => {\n    setEditInputValue(event.target.value);\n  };\n  const handleEditInputConfirm = () => {\n    const newTags = [...tags];\n    newTags[editInputIndex] = editInputValue;\n    setTags(newTags);\n    setEditInputIndex(-1);\n    setEditInputValue(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Layouts, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Body, {\n          children: [/*#__PURE__*/_jsxDEV(Space, {\n            size: [0, 8],\n            wrap: true,\n            children: [tags.map((tag, index) => {\n              if (editInputIndex === index) {\n                return (\n                  /*#__PURE__*/\n                  // <TagInputStyle\n                  //   type=\"text\"\n                  //   size=\"small\"\n                  //   ref={inputRef}\n                  //   value={inputValue}\n                  //   onChange={handleInputChange}\n                  //   onBlur={handleInputConfirm}\n                  //   onPressEnter={handleInputConfirm}\n                  // />\n                  _jsxDEV(Input, {\n                    type: \"text\",\n                    size: \"small\",\n                    ref: inputRef,\n                    value: inputValue,\n                    onChange: handleInputChange,\n                    onBlur: handleInputConfirm,\n                    onPressEnter: handleInputConfirm,\n                    style: tagInputStyle\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 21\n                  }, this)\n                );\n              }\n              const isLongTag = tag.length > 20;\n              const tagElem = /*#__PURE__*/_jsxDEV(Tag, {\n                closable: index !== 0,\n                style: {\n                  userSelect: \"none\"\n                },\n                onClose: () => handleClose(tag),\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  onDoubleClick: e => {\n                    if (index !== 0) {\n                      setEditInputIndex(index);\n                      setEditInputValue(tag);\n                      e.preventDefault();\n                    }\n                  },\n                  children: isLongTag ? `${tag.slice(0, 20)}...` : tag\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 21\n                }, this)\n              }, tag, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 19\n              }, this);\n              return isLongTag ? /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: tag,\n                children: tagElem\n              }, tag, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 19\n              }, this) : tagElem;\n            }), inputVisible ? /*#__PURE__*/_jsxDEV(TagInputStyle, {\n              type: \"text\",\n              size: \"small\",\n              ref: inputRef,\n              value: inputValue,\n              onChange: handleInputChange,\n              onBlur: handleInputConfirm,\n              onPressEnter: handleInputConfirm\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(TagPlusStyle, {\n              icon: /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 37\n              }, this),\n              onClick: showInput,\n              children: \"New Tag\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            form: form,\n            name: \"validateOnly\",\n            layout: \"vertical\",\n            autoComplete: \"off\",\n            ...formItemLayout,\n            onFinish: onFinish,\n            initialValues: {\n              name: \"\",\n              age: \"\",\n              select: undefined,\n              upload: null\n            },\n            children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n              rules: [{\n                required: true,\n                message: \"제목을 입력해주세요.\"\n              }],\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                height: \"54px\",\n                fontSize: \"30px\",\n                placeholder: \"\\uC81C\\uBAA9\",\n                value: title,\n                onChange: handleTitleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              rules: [{\n                required: true,\n                message: \"본문을 입력해주세요.\"\n              }],\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                height: \"800px\",\n                fontSize: \"14px\",\n                type: \"text\",\n                placeholder: \"\\uBCF8\\uBB38\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694!\",\n                style: {\n                  height: \"400px\"\n                },\n                value: content,\n                onChange: handleContentChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              label: \"Category\",\n              rules: [{\n                required: true,\n                message: \"카테고리를 선택해주세요.\"\n              }],\n              style: {\n                width: \"400px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                placeholder: \"\\uCE74\\uD14C\\uACE0\\uB9AC\",\n                value: category,\n                onChange: handleCategoryChange,\n                rules: [{\n                  required: true,\n                  message: \"이미지를 선택해주세요.\"\n                }],\n                children: [/*#__PURE__*/_jsxDEV(Option, {\n                  value: \"AI\",\n                  children: \"\\uC778\\uACF5\\uC9C0\\uB2A5\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 367,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Option, {\n                  value: \"BACKEND\",\n                  children: \"\\uBC31\\uC5D4\\uB4DC\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 368,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Option, {\n                  value: \"DEVOPS\",\n                  children: \"\\uB370\\uBE0C\\uC635\\uC2A4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 369,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Option, {\n                  value: \"EMBEDDED\",\n                  children: \"\\uC784\\uBCA0\\uB514\\uB4DC\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 370,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Option, {\n                  value: \"FRONTEND\",\n                  children: \"\\uD504\\uB860\\uD2B8\\uC5D4\\uB4DC\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 371,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Option, {\n                  value: \"GAME\",\n                  children: \"\\uAC8C\\uC784\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 372,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              name: \"upload\",\n              label: \"Upload\",\n              valuePropName: \"fileList\",\n              getValueFromEvent: normFile,\n              rules: [{\n                required: true,\n                message: \"이미지를 선택해주세요.\"\n              }],\n              style: {\n                textAlign: \"left\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Upload, {\n                name: \"logo\",\n                beforeUpload: file => {\n                  handleImageUpload(file);\n                  return false;\n                },\n                listType: \"picture\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 394,\n                    columnNumber: 33\n                  }, this),\n                  children: \"Click to upload\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 394,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              wrapperCol: {\n                span: 12,\n                offset: 6\n              },\n              children: /*#__PURE__*/_jsxDEV(Space, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  type: \"primary\",\n                  htmlType: \"submit\",\n                  onClick: () => handleWritePost(title),\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 400,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  htmlType: \"reset\",\n                  children: \"reset\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 407,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(WritePost, \"oMn92oVPNONefz6bUs/8dxamUJA=\", false, function () {\n  return [Form.useForm, theme.useToken, useNavigate];\n});\n_c = WritePost;\nconst Container = styled.div`\n  min-width: 1050px;\n  margin-top: 30px;\n  margin-bottom: 60px;\n  display: flex;\n`;\n_c2 = Container;\nconst Body = styled.div`\n  width: 100%;\n  margin: 0px auto;\n  letter-spacing: -0.6px;\n  text-align: center;\n`;\n_c3 = Body;\nconst Input = styled.textarea`\n  height: ${props => props.height || \"44px\"};\n  width: ${props => props.width || \"1000px\"};\n  padding: 0px 11px 1px 15px;\n  border: none;\n  border-bottom: 1px solid rgb(221, 221, 221);\n  font-weight: 400;\n  font-size: ${props => props.fontSize || \"16px\"};\n  line-height: 1.6;\n  color: rgb(51, 51, 51);\n  outline: none;\n  resize: none;\n`;\n_c4 = Input;\nconst TagInputStyle = styled.div`\n  width: 64px;\n  height: 22px;\n  margin-right: 8px;\n  vertical-align: top;\n`;\n_c5 = TagInputStyle;\nconst TagPlusStyle = styled.div`\n  height: 30px; // Adjust the height as needed\n  background-color: gray; // Replace with your actual theme variable\n  border: 1px dashed gray; // Add border styling\n  display: inline-block; // Ensure it's displayed inline\n  padding: 5px; // Add padding as needed\n`;\n_c6 = TagPlusStyle;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"WritePost\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Body\");\n$RefreshReg$(_c4, \"Input\");\n$RefreshReg$(_c5, \"TagInputStyle\");\n$RefreshReg$(_c6, \"TagPlusStyle\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Button","Form","Select","Upload","Space","Tag","Tooltip","theme","UploadOutlined","Header","NavHeader","styled","Layouts","axios","useNavigate","PlusOutlined","InputRef","jsxDEV","_jsxDEV","Fragment","_Fragment","Option","formItemLayout","labelCol","span","wrapperCol","normFile","e","console","log","Array","isArray","fileList","onFinish","values","WritePost","_s","form","useForm","title","setTitle","content","setContent","category","setCategory","url","setUrl","uploadedImages","setUploadedImages","token","useToken","tags","setTags","inputVisible","setInputVisible","inputValue","setInputValue","editInputIndex","setEditInputIndex","editInputValue","setEditInputValue","inputRef","editInputRef","navigate","handleTitleChange","event","currentTarget","value","handleContentChange","handleCategoryChange","handleWritePost","postParam","response","post","error","handleImageUpload","file","formData","FormData","append","prevImages","data","uid","name","status","_inputRef$current","current","focus","_editInputRef$current","handleClose","removedTag","newTags","filter","tag","showInput","handleInputChange","target","handleInputConfirm","includes","handleEditInputChange","handleEditInputConfirm","children","fileName","_jsxFileName","lineNumber","columnNumber","Container","Body","size","wrap","map","index","Input","type","ref","onChange","onBlur","onPressEnter","style","tagInputStyle","isLongTag","length","tagElem","closable","userSelect","onClose","onDoubleClick","preventDefault","slice","TagInputStyle","TagPlusStyle","icon","onClick","layout","autoComplete","initialValues","age","select","undefined","upload","Item","rules","required","message","height","fontSize","placeholder","label","width","valuePropName","getValueFromEvent","textAlign","beforeUpload","listType","offset","htmlType","_c","div","_c2","_c3","textarea","props","_c4","_c5","_c6","$RefreshReg$"],"sources":["/Users/yoonezi/Documents/fe/velogFE/src/pages/WritePost.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { Button, Form, Select, Upload, Space, Tag, Tooltip, theme } from \"antd\";\nimport { UploadOutlined } from \"@ant-design/icons\";\nimport Header from \"../Common/Header/Header\";\nimport NavHeader from \"../Common/Header/NavHeader/NavHeader\";\nimport styled from \"styled-components\";\nimport Layouts from \"../Common/Layout\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport { InputRef } from \"antd\";\n\nconst { Option } = Select;\n\nconst formItemLayout = {\n  labelCol: {\n    span: 6,\n  },\n  wrapperCol: {\n    span: 14,\n  },\n};\n\nconst normFile = (e) => {\n  console.log(\"Upload event:\", e);\n  if (Array.isArray(e)) {\n    return e;\n  }\n  return e?.fileList;\n};\n\nconst onFinish = (values) => {\n  console.log(\"Received values of form: \", values);\n};\n\nexport default function WritePost() {\n  const [form] = Form.useForm();\n\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [url, setUrl] = useState(false);\n  const [uploadedImages, setUploadedImages] = useState([]);\n\n  const { token } = theme.useToken();\n  const [tags, setTags] = useState([\"Unremovable\", \"Tag 2\", \"Tag 3\"]);\n  const [inputVisible, setInputVisible] = useState(false);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [editInputIndex, setEditInputIndex] = useState(-1);\n  const [editInputValue, setEditInputValue] = useState(\"\");\n  const inputRef = useRef(null);\n  const editInputRef = useRef(null);\n\n  const navigate = useNavigate();\n\n  const handleTitleChange = (event) => {\n    setTitle(event.currentTarget.value);\n    console.log(\"title: \", event.currentTarget.value);\n  };\n\n  const handleContentChange = (event) => {\n    setContent(event.currentTarget.value);\n    console.log(\"content: \", event.currentTarget.value);\n  };\n\n  const handleCategoryChange = (value) => {\n    setCategory(value);\n    console.log(\"category: \", value);\n  };\n\n  const handleWritePost = async (postParam) => {\n    try {\n      const response = await axios.post(\n        \"http://localhost:8080/hello\",\n        postParam\n        // {\n        //   title,\n        //   content,\n        // }\n      );\n\n      // navigate(\"/\");\n      // window.location.replace(\"/\");\n      console.log(response);\n    } catch (error) {\n      console.log(\"실패하였습니다\", error);\n    }\n  };\n\n  const handleImageUpload = async (file) => {\n    try {\n      const formData = new FormData();\n      formData.append(\"multipartFile\", file);\n\n      const response = await axios.post(\n        \"http://localhost:8080/api/upload/image/post\",\n        formData\n      );\n\n      console.log(\"Image upload response:\", response);\n\n      // Update the uploadedImages state with the new image\n      setUploadedImages((prevImages) => [\n        ...prevImages,\n        {\n          url: response.data.url,\n          uid: file.uid,\n          name: file.name,\n          status: \"done\",\n        },\n      ]);\n\n      return response.data.url;\n    } catch (error) {\n      console.error(\"Image upload failed:\", error);\n      throw error;\n    }\n  };\n\n  useEffect(() => {\n    if (inputVisible) {\n      inputRef.current?.focus();\n    }\n  }, [inputVisible]);\n\n  useEffect(() => {\n    editInputRef.current?.focus();\n  }, [editInputValue]);\n\n  const handleClose = (removedTag) => {\n    const newTags = tags.filter((tag) => tag !== removedTag);\n    console.log(newTags);\n\n    setTags(newTags);\n  };\n\n  const showInput = () => {\n    setInputVisible(true);\n  };\n\n  const handleInputChange = (event) => {\n    setInputValue(event.target.value);\n  };\n\n  const handleInputConfirm = () => {\n    if (inputValue && !tags.includes(inputValue)) {\n      setTags([...tags, inputValue]);\n    }\n    setInputVisible(false);\n    setInputValue(\"\");\n  };\n\n  const handleEditInputChange = (event) => {\n    setEditInputValue(event.target.value);\n  };\n\n  const handleEditInputConfirm = () => {\n    const newTags = [...tags];\n    newTags[editInputIndex] = editInputValue;\n    setTags(newTags);\n    setEditInputIndex(-1);\n    setEditInputValue(\"\");\n  };\n\n  return (\n    <>\n      <Header />\n      <NavHeader />\n      <Layouts>\n        <Container>\n          <Body>\n            <Space size={[0, 8]} wrap>\n              {tags.map((tag, index) => {\n                if (editInputIndex === index) {\n                  return (\n                    // <TagInputStyle\n                    //   type=\"text\"\n                    //   size=\"small\"\n                    //   ref={inputRef}\n                    //   value={inputValue}\n                    //   onChange={handleInputChange}\n                    //   onBlur={handleInputConfirm}\n                    //   onPressEnter={handleInputConfirm}\n                    // />\n                    <Input\n  type=\"text\"\n  size=\"small\"\n  ref={inputRef}\n  value={inputValue}\n  onChange={handleInputChange}\n  onBlur={handleInputConfirm}\n  onPressEnter={handleInputConfirm}\n  style={tagInputStyle}\n/>\n                  );\n                }\n                const isLongTag = tag.length > 20;\n                const tagElem = (\n                  <Tag\n                    key={tag}\n                    closable={index !== 0}\n                    style={{ userSelect: \"none\" }}\n                    onClose={() => handleClose(tag)}\n                  >\n                    <span\n                      onDoubleClick={(e) => {\n                        if (index !== 0) {\n                          setEditInputIndex(index);\n                          setEditInputValue(tag);\n                          e.preventDefault();\n                        }\n                      }}\n                    >\n                      {isLongTag ? `${tag.slice(0, 20)}...` : tag}\n                    </span>\n                  </Tag>\n                );\n                return isLongTag ? (\n                  <Tooltip title={tag} key={tag}>\n                    {tagElem}\n                  </Tooltip>\n                ) : (\n                  tagElem\n                );\n              })}\n              {inputVisible ? (\n                <TagInputStyle\n                  type=\"text\"\n                  size=\"small\"\n                  ref={inputRef}\n                  value={inputValue}\n                  onChange={handleInputChange}\n                  onBlur={handleInputConfirm}\n                  onPressEnter={handleInputConfirm}\n                />\n              ) : (\n                <TagPlusStyle icon={<PlusOutlined />} onClick={showInput}>\n                  New Tag\n                </TagPlusStyle>\n              )}\n            </Space>\n            <Form\n              form={form}\n              name=\"validateOnly\"\n              layout=\"vertical\"\n              autoComplete=\"off\"\n              {...formItemLayout}\n              onFinish={onFinish}\n              initialValues={{\n                name: \"\",\n                age: \"\",\n                select: undefined,\n                upload: null,\n              }}\n            >\n              <Form.Item\n                rules={[{ required: true, message: \"제목을 입력해주세요.\" }]}\n              >\n                <Input\n                  height=\"54px\"\n                  fontSize=\"30px\"\n                  placeholder=\"제목\"\n                  value={title}\n                  onChange={handleTitleChange}\n                />\n              </Form.Item>\n              <Form.Item\n                rules={[{ required: true, message: \"본문을 입력해주세요.\" }]}\n              >\n                <Input\n                  height=\"800px\"\n                  fontSize=\"14px\"\n                  type=\"text\"\n                  placeholder=\"본문을 입력해주세요!\"\n                  style={{\n                    height: \"400px\",\n                  }}\n                  value={content}\n                  onChange={handleContentChange}\n                />\n              </Form.Item>\n\n              <Form.Item\n                label=\"Category\"\n                rules={[\n                  { required: true, message: \"카테고리를 선택해주세요.\" },\n                ]}\n                style={{\n                  width: \"400px\",\n                }}\n              >\n                {/* <Space size={[0, 8]} wrap>\n                  {tags.map((tag, index) => {\n                    if (editInputIndex === index) {\n                      return (\n                        <TagPlusStyle\n                          // ref={editInputRef}\n                          key={tag}\n                          size=\"small\"\n                          // style={tagInputStyle}\n                          value={editInputValue}\n                          onChange={handleEditInputChange}\n                          onBlur={handleEditInputConfirm}\n                          onPressEnter={handleEditInputConfirm}\n                        />\n                      );\n                    }\n                    const isLongTag = tag.length > 20;\n                    const tagElem = (\n                      <Tag\n                        key={tag}\n                        closable={index !== 0}\n                        style={{ userSelect: \"none\" }}\n                        onClose={() => handleClose(tag)}\n                      >\n                        <span\n                          onDoubleClick={(e) => {\n                            if (index !== 0) {\n                              setEditInputIndex(index);\n                              setEditInputValue(tag);\n                              e.preventDefault();\n                            }\n                          }}\n                        >\n                          {isLongTag ? `${tag.slice(0, 20)}...` : tag}\n                        </span>\n                      </Tag>\n                    );\n                    return isLongTag ? (\n                      <Tooltip title={tag} key={tag}>\n                        {tagElem}\n                      </Tooltip>\n                    ) : (\n                      tagElem\n                    );\n                  })}\n                  {inputVisible ? (\n                    <TagInputStyle\n                      // ref={inputRef}\n                      type=\"text\"\n                      size=\"small\"\n                      // style={tagInputStyle}\n                      value={inputValue}\n                      onChange={handleInputChange}\n                      onBlur={handleInputConfirm}\n                      onPressEnter={handleInputConfirm}\n                    />\n                  ) : (\n                    <TagPlusStyle\n                      // style={tagPlusStyle}\n                      icon={<PlusOutlined />}\n                      onClick={showInput}\n                    >\n                      New Tag\n                    </TagPlusStyle>\n                  )}\n                </Space> */}\n\n                <Select\n                  placeholder=\"카테고리\"\n                  value={category}\n                  onChange={handleCategoryChange}\n                  rules={[\n                    { required: true, message: \"이미지를 선택해주세요.\" },\n                  ]}\n                >\n                  <Option value=\"AI\">인공지능</Option>\n                  <Option value=\"BACKEND\">백엔드</Option>\n                  <Option value=\"DEVOPS\">데브옵스</Option>\n                  <Option value=\"EMBEDDED\">임베디드</Option>\n                  <Option value=\"FRONTEND\">프론트엔드</Option>\n                  <Option value=\"GAME\">게임</Option>\n                </Select>\n              </Form.Item>\n\n              <Form.Item\n                name=\"upload\"\n                label=\"Upload\"\n                valuePropName=\"fileList\"\n                getValueFromEvent={normFile}\n                rules={[{ required: true, message: \"이미지를 선택해주세요.\" }]}\n                style={{\n                  textAlign: \"left\",\n                }}\n              >\n                <Upload\n                  name=\"logo\"\n                  beforeUpload={(file) => {\n                    handleImageUpload(file);\n                    return false;\n                  }}\n                  listType=\"picture\"\n                >\n                  <Button icon={<UploadOutlined />}>Click to upload</Button>\n                </Upload>\n              </Form.Item>\n\n              <Form.Item wrapperCol={{ span: 12, offset: 6 }}>\n                <Space>\n                  <Button\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    onClick={() => handleWritePost(title)}\n                  >\n                    Submit\n                  </Button>\n                  <Button htmlType=\"reset\">reset</Button>\n                </Space>\n              </Form.Item>\n            </Form>\n          </Body>\n        </Container>\n      </Layouts>\n    </>\n  );\n}\n\nconst Container = styled.div`\n  min-width: 1050px;\n  margin-top: 30px;\n  margin-bottom: 60px;\n  display: flex;\n`;\n\nconst Body = styled.div`\n  width: 100%;\n  margin: 0px auto;\n  letter-spacing: -0.6px;\n  text-align: center;\n`;\n\nconst Input = styled.textarea`\n  height: ${(props) => props.height || \"44px\"};\n  width: ${(props) => props.width || \"1000px\"};\n  padding: 0px 11px 1px 15px;\n  border: none;\n  border-bottom: 1px solid rgb(221, 221, 221);\n  font-weight: 400;\n  font-size: ${(props) => props.fontSize || \"16px\"};\n  line-height: 1.6;\n  color: rgb(51, 51, 51);\n  outline: none;\n  resize: none;\n`;\n\nconst TagInputStyle = styled.div`\n  width: 64px;\n  height: 22px;\n  margin-right: 8px;\n  vertical-align: top;\n`;\n\nconst TagPlusStyle = styled.div`\n  height: 30px; // Adjust the height as needed\n  background-color: gray; // Replace with your actual theme variable\n  border: 1px dashed gray; // Add border styling\n  display: inline-block; // Ensure it's displayed inline\n  padding: 5px; // Add padding as needed\n`;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}