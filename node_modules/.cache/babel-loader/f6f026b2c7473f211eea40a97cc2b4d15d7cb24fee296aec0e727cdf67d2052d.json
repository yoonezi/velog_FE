{"ast":null,"code":"var _jsxFileName = \"/Users/yoonezi/Documents/fe/velogFE/src/pages/WritePost.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Button, Form, Select, Upload, Space, Tag, Tooltip } from \"antd\";\nimport { UploadOutlined } from \"@ant-design/icons\";\nimport Header from \"../Common/Header/Header\";\nimport NavHeader from \"../Common/Header/NavHeader/NavHeader\";\nimport styled from \"styled-components\";\nimport Layouts from \"../Common/Layout\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport { InputRef } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\nconst formItemLayout = {\n  labelCol: {\n    span: 6\n  },\n  wrapperCol: {\n    span: 14\n  }\n};\nconst normFile = e => {\n  console.log(\"Upload event:\", e);\n  if (Array.isArray(e)) {\n    return e;\n  }\n  return e === null || e === void 0 ? void 0 : e.fileList;\n};\nconst onFinish = values => {\n  console.log(\"Received values of form: \", values);\n};\nexport default function WritePost() {\n  _s();\n  const [form] = Form.useForm();\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [url, setUrl] = useState(false);\n  const [uploadedImages, setUploadedImages] = useState([]);\n  const [tags, setTags] = useState([\"Unremovable\", \"Tag 2\", \"Tag 3\"]);\n  const [inputVisible, setInputVisible] = useState(false);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [editInputIndex, setEditInputIndex] = useState(-1);\n  const [editInputValue, setEditInputValue] = useState(\"\");\n  const navigate = useNavigate();\n  const inputRef = useRef(null);\n  const editInputRef = useRef(null);\n  const handleTitleChange = event => {\n    setTitle(event.currentTarget.value);\n    console.log(\"title: \", event.currentTarget.value);\n  };\n  const handleContentChange = event => {\n    setContent(event.currentTarget.value);\n    console.log(\"content: \", event.currentTarget.value);\n  };\n  const handleCategoryChange = value => {\n    setCategory(value);\n    console.log(\"category: \", value);\n  };\n  const handleWritePost = async postParam => {\n    try {\n      const response = await axios.post(\"http://localhost:8080/hello\", postParam\n      // {\n      //   title,\n      //   content,\n      // }\n      );\n\n      // navigate(\"/\");\n      // window.location.replace(\"/\");\n      console.log(response);\n    } catch (error) {\n      console.log(\"실패하였습니다\", error);\n    }\n  };\n  const handleImageUpload = async file => {\n    try {\n      const formData = new FormData();\n      formData.append(\"multipartFile\", file);\n      const response = await axios.post(\"http://localhost:8080/api/upload/image/post\", formData);\n      console.log(\"Image upload response:\", response);\n\n      // Update the uploadedImages state with the new image\n      setUploadedImages(prevImages => [...prevImages, {\n        url: response.data.url,\n        uid: file.uid,\n        name: file.name,\n        status: \"done\"\n      }]);\n      return response.data.url;\n    } catch (error) {\n      console.error(\"Image upload failed:\", error);\n      throw error;\n    }\n  };\n\n  // useEffect(() => {\n  //   if (inputVisible) {\n  //     inputRef.current?.focus();\n  //   }\n  // }, [inputVisible]);\n\n  // useEffect(() => {\n  //   editInputRef.current?.focus();\n  // }, [editInputValue]);\n\n  const handleClose = removedTag => {\n    const newTags = tags.filter(tag => tag !== removedTag);\n    setTags(newTags);\n  };\n  const showInput = () => {\n    setInputVisible(true);\n  };\n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n  };\n  const handleInputConfirm = () => {\n    if (inputValue && !tags.includes(inputValue)) {\n      setTags([...tags, inputValue]);\n    }\n    setInputVisible(false);\n    setInputValue(\"\");\n  };\n  const handleEditInputChange = event => {\n    setEditInputValue(event.target.value);\n  };\n  const handleEditInputConfirm = () => {\n    const newTags = [...tags];\n    newTags[editInputIndex] = editInputValue;\n    setTags(newTags);\n    setEditInputIndex(-1);\n    setEditInputValue(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Layouts, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Body, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            form: form,\n            name: \"validateOnly\",\n            layout: \"vertical\",\n            autoComplete: \"off\",\n            ...formItemLayout,\n            onFinish: onFinish,\n            initialValues: {\n              name: \"\",\n              age: \"\",\n              select: undefined,\n              upload: null\n            },\n            children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n              rules: [{\n                required: true,\n                message: \"제목을 입력해주세요.\"\n              }],\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                height: \"54px\",\n                fontSize: \"30px\",\n                placeholder: \"\\uC81C\\uBAA9\",\n                value: title,\n                onChange: handleTitleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              rules: [{\n                required: true,\n                message: \"본문을 입력해주세요.\"\n              }],\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                height: \"800px\",\n                fontSize: \"14px\",\n                type: \"text\",\n                placeholder: \"\\uBCF8\\uBB38\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694!\",\n                style: {\n                  height: \"400px\"\n                },\n                value: content,\n                onChange: handleContentChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Space, {\n              size: [0, 8],\n              wrap: true,\n              children: [tags.map((tag, index) => {\n                if (editInputIndex === index) {\n                  return /*#__PURE__*/_jsxDEV(TagInputStyle, {\n                    size: \"small\",\n                    value: editInputValue,\n                    onChange: handleEditInputChange,\n                    onBlur: handleEditInputConfirm,\n                    onPressEnter: handleEditInputConfirm\n                  }, tag, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 213,\n                    columnNumber: 23\n                  }, this);\n                }\n                const isLongTag = tag.length > 20;\n                const tagElem = /*#__PURE__*/_jsxDEV(Tag, {\n                  closable: index !== 0,\n                  style: {\n                    userSelect: \"none\"\n                  },\n                  onClose: () => handleClose(tag),\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    onDoubleClick: e => {\n                      if (index !== 0) {\n                        setEditInputIndex(index);\n                        setEditInputValue(tag);\n                        e.preventDefault();\n                      }\n                    },\n                    children: isLongTag ? `${tag.slice(0, 20)}...` : tag\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 231,\n                    columnNumber: 23\n                  }, this)\n                }, tag, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 21\n                }, this);\n                return isLongTag ? /*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: tag,\n                  children: tagElem\n                }, tag, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 21\n                }, this) : tagElem;\n              }), inputVisible ? /*#__PURE__*/_jsxDEV(TagInputStyle, {\n                type: \"text\",\n                size: \"small\",\n                value: inputValue,\n                onChange: handleInputChange,\n                onBlur: handleInputConfirm,\n                onPressEnter: handleInputConfirm\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(TagPlusStyle, {\n                icon: /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 39\n                }, this),\n                onClick: showInput,\n                children: \"New Tag\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              label: \"Category\",\n              rules: [{\n                required: true,\n                message: \"카테고리를 선택해주세요.\"\n              }],\n              style: {\n                width: \"400px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                placeholder: \"\\uCE74\\uD14C\\uACE0\\uB9AC\",\n                value: category,\n                onChange: handleCategoryChange,\n                rules: [{\n                  required: true,\n                  message: \"이미지를 선택해주세요.\"\n                }],\n                children: [/*#__PURE__*/_jsxDEV(Option, {\n                  value: \"AI\",\n                  children: \"\\uC778\\uACF5\\uC9C0\\uB2A5\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 352,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Option, {\n                  value: \"BACKEND\",\n                  children: \"\\uBC31\\uC5D4\\uB4DC\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 353,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Option, {\n                  value: \"DEVOPS\",\n                  children: \"\\uB370\\uBE0C\\uC635\\uC2A4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 354,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Option, {\n                  value: \"EMBEDDED\",\n                  children: \"\\uC784\\uBCA0\\uB514\\uB4DC\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 355,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Option, {\n                  value: \"FRONTEND\",\n                  children: \"\\uD504\\uB860\\uD2B8\\uC5D4\\uB4DC\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Option, {\n                  value: \"GAME\",\n                  children: \"\\uAC8C\\uC784\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 357,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              name: \"upload\",\n              label: \"Upload\",\n              valuePropName: \"fileList\",\n              getValueFromEvent: normFile,\n              rules: [{\n                required: true,\n                message: \"이미지를 선택해주세요.\"\n              }],\n              style: {\n                textAlign: \"left\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Upload, {\n                name: \"logo\",\n                beforeUpload: file => {\n                  handleImageUpload(file);\n                  return false;\n                },\n                listType: \"picture\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 379,\n                    columnNumber: 33\n                  }, this),\n                  children: \"Click to upload\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 379,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              wrapperCol: {\n                span: 12,\n                offset: 6\n              },\n              children: /*#__PURE__*/_jsxDEV(Space, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  type: \"primary\",\n                  htmlType: \"submit\",\n                  onClick: () => handleWritePost(title),\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 385,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  htmlType: \"reset\",\n                  children: \"reset\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 392,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(WritePost, \"9+Nnh4ubQu8qNZtnFYOphvE7hF0=\", false, function () {\n  return [Form.useForm, useNavigate];\n});\n_c = WritePost;\nconst Container = styled.div`\n  min-width: 1050px;\n  margin-top: 30px;\n  margin-bottom: 60px;\n  display: flex;\n`;\n_c2 = Container;\nconst Body = styled.div`\n  width: 100%;\n  margin: 0px auto;\n  letter-spacing: -0.6px;\n  text-align: center;\n`;\n_c3 = Body;\nconst Input = styled.textarea`\n  height: ${props => props.height || \"44px\"};\n  width: ${props => props.width || \"1000px\"};\n  padding: 0px 11px 1px 15px;\n  border: none;\n  border-bottom: 1px solid rgb(221, 221, 221);\n  font-weight: 400;\n  font-size: ${props => props.fontSize || \"16px\"};\n  line-height: 1.6;\n  color: rgb(51, 51, 51);\n  outline: none;\n  resize: none;\n`;\n_c4 = Input;\nconst TagInputStyle = styled.div`\n  width: 64px;\n  height: 22px;\n  margin-right: 8px;\n  vertical-align: top;\n`;\n_c5 = TagInputStyle;\nconst TagPlusStyle = styled.div`\n  height: 22px;\n  background-color: gray; // Replace with your actual theme variable\n  border-style: dashed;\n`;\n_c6 = TagPlusStyle;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"WritePost\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Body\");\n$RefreshReg$(_c4, \"Input\");\n$RefreshReg$(_c5, \"TagInputStyle\");\n$RefreshReg$(_c6, \"TagPlusStyle\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Button","Form","Select","Upload","Space","Tag","Tooltip","UploadOutlined","Header","NavHeader","styled","Layouts","axios","useNavigate","PlusOutlined","InputRef","jsxDEV","_jsxDEV","Fragment","_Fragment","Option","formItemLayout","labelCol","span","wrapperCol","normFile","e","console","log","Array","isArray","fileList","onFinish","values","WritePost","_s","form","useForm","title","setTitle","content","setContent","category","setCategory","url","setUrl","uploadedImages","setUploadedImages","tags","setTags","inputVisible","setInputVisible","inputValue","setInputValue","editInputIndex","setEditInputIndex","editInputValue","setEditInputValue","navigate","inputRef","editInputRef","handleTitleChange","event","currentTarget","value","handleContentChange","handleCategoryChange","handleWritePost","postParam","response","post","error","handleImageUpload","file","formData","FormData","append","prevImages","data","uid","name","status","handleClose","removedTag","newTags","filter","tag","showInput","handleInputChange","target","handleInputConfirm","includes","handleEditInputChange","handleEditInputConfirm","children","fileName","_jsxFileName","lineNumber","columnNumber","Container","Body","layout","autoComplete","initialValues","age","select","undefined","upload","Item","rules","required","message","Input","height","fontSize","placeholder","onChange","type","style","size","wrap","map","index","TagInputStyle","onBlur","onPressEnter","isLongTag","length","tagElem","closable","userSelect","onClose","onDoubleClick","preventDefault","slice","TagPlusStyle","icon","onClick","label","width","valuePropName","getValueFromEvent","textAlign","beforeUpload","listType","offset","htmlType","_c","div","_c2","_c3","textarea","props","_c4","_c5","_c6","$RefreshReg$"],"sources":["/Users/yoonezi/Documents/fe/velogFE/src/pages/WritePost.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { Button, Form, Select, Upload, Space, Tag, Tooltip } from \"antd\";\nimport { UploadOutlined } from \"@ant-design/icons\";\nimport Header from \"../Common/Header/Header\";\nimport NavHeader from \"../Common/Header/NavHeader/NavHeader\";\nimport styled from \"styled-components\";\nimport Layouts from \"../Common/Layout\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport { InputRef } from \"antd\";\n\nconst { Option } = Select;\n\nconst formItemLayout = {\n  labelCol: {\n    span: 6,\n  },\n  wrapperCol: {\n    span: 14,\n  },\n};\n\nconst normFile = (e) => {\n  console.log(\"Upload event:\", e);\n  if (Array.isArray(e)) {\n    return e;\n  }\n  return e?.fileList;\n};\n\nconst onFinish = (values) => {\n  console.log(\"Received values of form: \", values);\n};\n\nexport default function WritePost() {\n  const [form] = Form.useForm();\n\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [url, setUrl] = useState(false);\n  const [uploadedImages, setUploadedImages] = useState([]);\n  const [tags, setTags] = useState([\"Unremovable\", \"Tag 2\", \"Tag 3\"]);\n  const [inputVisible, setInputVisible] = useState(false);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [editInputIndex, setEditInputIndex] = useState(-1);\n  const [editInputValue, setEditInputValue] = useState(\"\");\n\n  const navigate = useNavigate();\n\n  const inputRef = useRef(null);\n  const editInputRef = useRef(null);\n\n  const handleTitleChange = (event) => {\n    setTitle(event.currentTarget.value);\n    console.log(\"title: \", event.currentTarget.value);\n  };\n\n  const handleContentChange = (event) => {\n    setContent(event.currentTarget.value);\n    console.log(\"content: \", event.currentTarget.value);\n  };\n\n  const handleCategoryChange = (value) => {\n    setCategory(value);\n    console.log(\"category: \", value);\n  };\n\n  const handleWritePost = async (postParam) => {\n    try {\n      const response = await axios.post(\n        \"http://localhost:8080/hello\",\n        postParam\n        // {\n        //   title,\n        //   content,\n        // }\n      );\n\n      // navigate(\"/\");\n      // window.location.replace(\"/\");\n      console.log(response);\n    } catch (error) {\n      console.log(\"실패하였습니다\", error);\n    }\n  };\n\n  const handleImageUpload = async (file) => {\n    try {\n      const formData = new FormData();\n      formData.append(\"multipartFile\", file);\n\n      const response = await axios.post(\n        \"http://localhost:8080/api/upload/image/post\",\n        formData\n      );\n\n      console.log(\"Image upload response:\", response);\n\n      // Update the uploadedImages state with the new image\n      setUploadedImages((prevImages) => [\n        ...prevImages,\n        {\n          url: response.data.url,\n          uid: file.uid,\n          name: file.name,\n          status: \"done\",\n        },\n      ]);\n\n      return response.data.url;\n    } catch (error) {\n      console.error(\"Image upload failed:\", error);\n      throw error;\n    }\n  };\n\n  // useEffect(() => {\n  //   if (inputVisible) {\n  //     inputRef.current?.focus();\n  //   }\n  // }, [inputVisible]);\n\n  // useEffect(() => {\n  //   editInputRef.current?.focus();\n  // }, [editInputValue]);\n\n  const handleClose = (removedTag) => {\n    const newTags = tags.filter((tag) => tag !== removedTag);\n    setTags(newTags);\n  };\n\n  const showInput = () => {\n    setInputVisible(true);\n  };\n\n  const handleInputChange = (event) => {\n    setInputValue(event.target.value);\n  };\n\n  const handleInputConfirm = () => {\n    if (inputValue && !tags.includes(inputValue)) {\n      setTags([...tags, inputValue]);\n    }\n    setInputVisible(false);\n    setInputValue(\"\");\n  };\n\n  const handleEditInputChange = (event) => {\n    setEditInputValue(event.target.value);\n  };\n\n  const handleEditInputConfirm = () => {\n    const newTags = [...tags];\n    newTags[editInputIndex] = editInputValue;\n    setTags(newTags);\n    setEditInputIndex(-1);\n    setEditInputValue(\"\");\n  };\n\n  return (\n    <>\n      <Header />\n      <NavHeader />\n      <Layouts>\n        <Container>\n          <Body>\n            <Form\n              form={form}\n              name=\"validateOnly\"\n              layout=\"vertical\"\n              autoComplete=\"off\"\n              {...formItemLayout}\n              onFinish={onFinish}\n              initialValues={{\n                name: \"\",\n                age: \"\",\n                select: undefined,\n                upload: null,\n              }}\n            >\n              <Form.Item\n                rules={[{ required: true, message: \"제목을 입력해주세요.\" }]}\n              >\n                <Input\n                  height=\"54px\"\n                  fontSize=\"30px\"\n                  placeholder=\"제목\"\n                  value={title}\n                  onChange={handleTitleChange}\n                />\n              </Form.Item>\n              <Form.Item\n                rules={[{ required: true, message: \"본문을 입력해주세요.\" }]}\n              >\n                <Input\n                  height=\"800px\"\n                  fontSize=\"14px\"\n                  type=\"text\"\n                  placeholder=\"본문을 입력해주세요!\"\n                  style={{\n                    height: \"400px\",\n                  }}\n                  value={content}\n                  onChange={handleContentChange}\n                />\n              </Form.Item>\n              <Space size={[0, 8]} wrap>\n                {tags.map((tag, index) => {\n                  if (editInputIndex === index) {\n                    return (\n                      <TagInputStyle\n                        key={tag}\n                        size=\"small\"\n                        value={editInputValue}\n                        onChange={handleEditInputChange}\n                        onBlur={handleEditInputConfirm}\n                        onPressEnter={handleEditInputConfirm}\n                      />\n                    );\n                  }\n                  const isLongTag = tag.length > 20;\n                  const tagElem = (\n                    <Tag\n                      key={tag}\n                      closable={index !== 0}\n                      style={{ userSelect: \"none\" }}\n                      onClose={() => handleClose(tag)}\n                    >\n                      <span\n                        onDoubleClick={(e) => {\n                          if (index !== 0) {\n                            setEditInputIndex(index);\n                            setEditInputValue(tag);\n                            e.preventDefault();\n                          }\n                        }}\n                      >\n                        {isLongTag ? `${tag.slice(0, 20)}...` : tag}\n                      </span>\n                    </Tag>\n                  );\n                  return isLongTag ? (\n                    <Tooltip title={tag} key={tag}>\n                      {tagElem}\n                    </Tooltip>\n                  ) : (\n                    tagElem\n                  );\n                })}\n                {inputVisible ? (\n                  <TagInputStyle\n                    type=\"text\"\n                    size=\"small\"\n                    value={inputValue}\n                    onChange={handleInputChange}\n                    onBlur={handleInputConfirm}\n                    onPressEnter={handleInputConfirm}\n                  />\n                ) : (\n                  <TagPlusStyle icon={<PlusOutlined />} onClick={showInput}>\n                    New Tag\n                  </TagPlusStyle>\n                )}\n              </Space>\n\n              <Form.Item\n                label=\"Category\"\n                rules={[\n                  { required: true, message: \"카테고리를 선택해주세요.\" },\n                ]}\n                style={{\n                  width: \"400px\",\n                }}\n              >\n                {/* <Space size={[0, 8]} wrap>\n                  {tags.map((tag, index) => {\n                    if (editInputIndex === index) {\n                      return (\n                        <TagPlusStyle\n                          // ref={editInputRef}\n                          key={tag}\n                          size=\"small\"\n                          // style={tagInputStyle}\n                          value={editInputValue}\n                          onChange={handleEditInputChange}\n                          onBlur={handleEditInputConfirm}\n                          onPressEnter={handleEditInputConfirm}\n                        />\n                      );\n                    }\n                    const isLongTag = tag.length > 20;\n                    const tagElem = (\n                      <Tag\n                        key={tag}\n                        closable={index !== 0}\n                        style={{ userSelect: \"none\" }}\n                        onClose={() => handleClose(tag)}\n                      >\n                        <span\n                          onDoubleClick={(e) => {\n                            if (index !== 0) {\n                              setEditInputIndex(index);\n                              setEditInputValue(tag);\n                              e.preventDefault();\n                            }\n                          }}\n                        >\n                          {isLongTag ? `${tag.slice(0, 20)}...` : tag}\n                        </span>\n                      </Tag>\n                    );\n                    return isLongTag ? (\n                      <Tooltip title={tag} key={tag}>\n                        {tagElem}\n                      </Tooltip>\n                    ) : (\n                      tagElem\n                    );\n                  })}\n                  {inputVisible ? (\n                    <TagInputStyle\n                      // ref={inputRef}\n                      type=\"text\"\n                      size=\"small\"\n                      // style={tagInputStyle}\n                      value={inputValue}\n                      onChange={handleInputChange}\n                      onBlur={handleInputConfirm}\n                      onPressEnter={handleInputConfirm}\n                    />\n                  ) : (\n                    <TagPlusStyle\n                      // style={tagPlusStyle}\n                      icon={<PlusOutlined />}\n                      onClick={showInput}\n                    >\n                      New Tag\n                    </TagPlusStyle>\n                  )}\n                </Space> */}\n\n                <Select\n                  placeholder=\"카테고리\"\n                  value={category}\n                  onChange={handleCategoryChange}\n                  rules={[\n                    { required: true, message: \"이미지를 선택해주세요.\" },\n                  ]}\n                >\n                  <Option value=\"AI\">인공지능</Option>\n                  <Option value=\"BACKEND\">백엔드</Option>\n                  <Option value=\"DEVOPS\">데브옵스</Option>\n                  <Option value=\"EMBEDDED\">임베디드</Option>\n                  <Option value=\"FRONTEND\">프론트엔드</Option>\n                  <Option value=\"GAME\">게임</Option>\n                </Select>\n              </Form.Item>\n\n              <Form.Item\n                name=\"upload\"\n                label=\"Upload\"\n                valuePropName=\"fileList\"\n                getValueFromEvent={normFile}\n                rules={[{ required: true, message: \"이미지를 선택해주세요.\" }]}\n                style={{\n                  textAlign: \"left\",\n                }}\n              >\n                <Upload\n                  name=\"logo\"\n                  beforeUpload={(file) => {\n                    handleImageUpload(file);\n                    return false;\n                  }}\n                  listType=\"picture\"\n                >\n                  <Button icon={<UploadOutlined />}>Click to upload</Button>\n                </Upload>\n              </Form.Item>\n\n              <Form.Item wrapperCol={{ span: 12, offset: 6 }}>\n                <Space>\n                  <Button\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    onClick={() => handleWritePost(title)}\n                  >\n                    Submit\n                  </Button>\n                  <Button htmlType=\"reset\">reset</Button>\n                </Space>\n              </Form.Item>\n            </Form>\n          </Body>\n        </Container>\n      </Layouts>\n    </>\n  );\n}\n\nconst Container = styled.div`\n  min-width: 1050px;\n  margin-top: 30px;\n  margin-bottom: 60px;\n  display: flex;\n`;\n\nconst Body = styled.div`\n  width: 100%;\n  margin: 0px auto;\n  letter-spacing: -0.6px;\n  text-align: center;\n`;\n\nconst Input = styled.textarea`\n  height: ${(props) => props.height || \"44px\"};\n  width: ${(props) => props.width || \"1000px\"};\n  padding: 0px 11px 1px 15px;\n  border: none;\n  border-bottom: 1px solid rgb(221, 221, 221);\n  font-weight: 400;\n  font-size: ${(props) => props.fontSize || \"16px\"};\n  line-height: 1.6;\n  color: rgb(51, 51, 51);\n  outline: none;\n  resize: none;\n`;\n\nconst TagInputStyle = styled.div`\n  width: 64px;\n  height: 22px;\n  margin-right: 8px;\n  vertical-align: top;\n`;\n\nconst TagPlusStyle = styled.div`\n  height: 22px;\n  background-color: gray; // Replace with your actual theme variable\n  border-style: dashed;\n`;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,MAAM,EAAEC,IAAI,EAAEC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,GAAG,EAAEC,OAAO,QAAQ,MAAM;AACxE,SAASC,cAAc,QAAQ,mBAAmB;AAClD,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,OAAOC,SAAS,MAAM,sCAAsC;AAC5D,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,OAAO,MAAM,kBAAkB;AACtC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,YAAY,QAAQ,mBAAmB;AAChD,SAASC,QAAQ,QAAQ,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhC,MAAM;EAAEC;AAAO,CAAC,GAAGlB,MAAM;AAEzB,MAAMmB,cAAc,GAAG;EACrBC,QAAQ,EAAE;IACRC,IAAI,EAAE;EACR,CAAC;EACDC,UAAU,EAAE;IACVD,IAAI,EAAE;EACR;AACF,CAAC;AAED,MAAME,QAAQ,GAAIC,CAAC,IAAK;EACtBC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,CAAC,CAAC;EAC/B,IAAIG,KAAK,CAACC,OAAO,CAACJ,CAAC,CAAC,EAAE;IACpB,OAAOA,CAAC;EACV;EACA,OAAOA,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAEK,QAAQ;AACpB,CAAC;AAED,MAAMC,QAAQ,GAAIC,MAAM,IAAK;EAC3BN,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEK,MAAM,CAAC;AAClD,CAAC;AAED,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,IAAI,CAAC,GAAGnC,IAAI,CAACoC,OAAO,EAAE;EAE7B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAG1C,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC2C,OAAO,EAAEC,UAAU,CAAC,GAAG5C,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC6C,QAAQ,EAAEC,WAAW,CAAC,GAAG9C,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC+C,GAAG,EAAEC,MAAM,CAAC,GAAGhD,QAAQ,CAAC,KAAK,CAAC;EACrC,MAAM,CAACiD,cAAc,EAAEC,iBAAiB,CAAC,GAAGlD,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACmD,IAAI,EAAEC,OAAO,CAAC,GAAGpD,QAAQ,CAAC,CAAC,aAAa,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;EACnE,MAAM,CAACqD,YAAY,EAAEC,eAAe,CAAC,GAAGtD,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACuD,UAAU,EAAEC,aAAa,CAAC,GAAGxD,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACyD,cAAc,EAAEC,iBAAiB,CAAC,GAAG1D,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxD,MAAM,CAAC2D,cAAc,EAAEC,iBAAiB,CAAC,GAAG5D,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAM6D,QAAQ,GAAG7C,WAAW,EAAE;EAE9B,MAAM8C,QAAQ,GAAG5D,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAM6D,YAAY,GAAG7D,MAAM,CAAC,IAAI,CAAC;EAEjC,MAAM8D,iBAAiB,GAAIC,KAAK,IAAK;IACnCvB,QAAQ,CAACuB,KAAK,CAACC,aAAa,CAACC,KAAK,CAAC;IACnCrC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEkC,KAAK,CAACC,aAAa,CAACC,KAAK,CAAC;EACnD,CAAC;EAED,MAAMC,mBAAmB,GAAIH,KAAK,IAAK;IACrCrB,UAAU,CAACqB,KAAK,CAACC,aAAa,CAACC,KAAK,CAAC;IACrCrC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEkC,KAAK,CAACC,aAAa,CAACC,KAAK,CAAC;EACrD,CAAC;EAED,MAAME,oBAAoB,GAAIF,KAAK,IAAK;IACtCrB,WAAW,CAACqB,KAAK,CAAC;IAClBrC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEoC,KAAK,CAAC;EAClC,CAAC;EAED,MAAMG,eAAe,GAAG,MAAOC,SAAS,IAAK;IAC3C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMzD,KAAK,CAAC0D,IAAI,CAC/B,6BAA6B,EAC7BF;MACA;MACA;MACA;MACA;MAAA,CACD;;MAED;MACA;MACAzC,OAAO,CAACC,GAAG,CAACyC,QAAQ,CAAC;IACvB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACd5C,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE2C,KAAK,CAAC;IAC/B;EACF,CAAC;EAED,MAAMC,iBAAiB,GAAG,MAAOC,IAAI,IAAK;IACxC,IAAI;MACF,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;MAC/BD,QAAQ,CAACE,MAAM,CAAC,eAAe,EAAEH,IAAI,CAAC;MAEtC,MAAMJ,QAAQ,GAAG,MAAMzD,KAAK,CAAC0D,IAAI,CAC/B,6CAA6C,EAC7CI,QAAQ,CACT;MAED/C,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEyC,QAAQ,CAAC;;MAE/C;MACAtB,iBAAiB,CAAE8B,UAAU,IAAK,CAChC,GAAGA,UAAU,EACb;QACEjC,GAAG,EAAEyB,QAAQ,CAACS,IAAI,CAAClC,GAAG;QACtBmC,GAAG,EAAEN,IAAI,CAACM,GAAG;QACbC,IAAI,EAAEP,IAAI,CAACO,IAAI;QACfC,MAAM,EAAE;MACV,CAAC,CACF,CAAC;MAEF,OAAOZ,QAAQ,CAACS,IAAI,CAAClC,GAAG;IAC1B,CAAC,CAAC,OAAO2B,KAAK,EAAE;MACd5C,OAAO,CAAC4C,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C,MAAMA,KAAK;IACb;EACF,CAAC;;EAED;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA,MAAMW,WAAW,GAAIC,UAAU,IAAK;IAClC,MAAMC,OAAO,GAAGpC,IAAI,CAACqC,MAAM,CAAEC,GAAG,IAAKA,GAAG,KAAKH,UAAU,CAAC;IACxDlC,OAAO,CAACmC,OAAO,CAAC;EAClB,CAAC;EAED,MAAMG,SAAS,GAAGA,CAAA,KAAM;IACtBpC,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC;EAED,MAAMqC,iBAAiB,GAAI1B,KAAK,IAAK;IACnCT,aAAa,CAACS,KAAK,CAAC2B,MAAM,CAACzB,KAAK,CAAC;EACnC,CAAC;EAED,MAAM0B,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,IAAItC,UAAU,IAAI,CAACJ,IAAI,CAAC2C,QAAQ,CAACvC,UAAU,CAAC,EAAE;MAC5CH,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAEI,UAAU,CAAC,CAAC;IAChC;IACAD,eAAe,CAAC,KAAK,CAAC;IACtBE,aAAa,CAAC,EAAE,CAAC;EACnB,CAAC;EAED,MAAMuC,qBAAqB,GAAI9B,KAAK,IAAK;IACvCL,iBAAiB,CAACK,KAAK,CAAC2B,MAAM,CAACzB,KAAK,CAAC;EACvC,CAAC;EAED,MAAM6B,sBAAsB,GAAGA,CAAA,KAAM;IACnC,MAAMT,OAAO,GAAG,CAAC,GAAGpC,IAAI,CAAC;IACzBoC,OAAO,CAAC9B,cAAc,CAAC,GAAGE,cAAc;IACxCP,OAAO,CAACmC,OAAO,CAAC;IAChB7B,iBAAiB,CAAC,CAAC,CAAC,CAAC;IACrBE,iBAAiB,CAAC,EAAE,CAAC;EACvB,CAAC;EAED,oBACExC,OAAA,CAAAE,SAAA;IAAA2E,QAAA,gBACE7E,OAAA,CAACT,MAAM;MAAAuF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACVjF,OAAA,CAACR,SAAS;MAAAsF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACbjF,OAAA,CAACN,OAAO;MAAAmF,QAAA,eACN7E,OAAA,CAACkF,SAAS;QAAAL,QAAA,eACR7E,OAAA,CAACmF,IAAI;UAAAN,QAAA,eACH7E,OAAA,CAAChB,IAAI;YACHmC,IAAI,EAAEA,IAAK;YACX4C,IAAI,EAAC,cAAc;YACnBqB,MAAM,EAAC,UAAU;YACjBC,YAAY,EAAC,KAAK;YAAA,GACdjF,cAAc;YAClBW,QAAQ,EAAEA,QAAS;YACnBuE,aAAa,EAAE;cACbvB,IAAI,EAAE,EAAE;cACRwB,GAAG,EAAE,EAAE;cACPC,MAAM,EAAEC,SAAS;cACjBC,MAAM,EAAE;YACV,CAAE;YAAAb,QAAA,gBAEF7E,OAAA,CAAChB,IAAI,CAAC2G,IAAI;cACRC,KAAK,EAAE,CAAC;gBAAEC,QAAQ,EAAE,IAAI;gBAAEC,OAAO,EAAE;cAAc,CAAC,CAAE;cAAAjB,QAAA,eAEpD7E,OAAA,CAAC+F,KAAK;gBACJC,MAAM,EAAC,MAAM;gBACbC,QAAQ,EAAC,MAAM;gBACfC,WAAW,EAAC,cAAI;gBAChBnD,KAAK,EAAE1B,KAAM;gBACb8E,QAAQ,EAAEvD;cAAkB;gBAAAkC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA;YAC5B;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QACQ,eACZjF,OAAA,CAAChB,IAAI,CAAC2G,IAAI;cACRC,KAAK,EAAE,CAAC;gBAAEC,QAAQ,EAAE,IAAI;gBAAEC,OAAO,EAAE;cAAc,CAAC,CAAE;cAAAjB,QAAA,eAEpD7E,OAAA,CAAC+F,KAAK;gBACJC,MAAM,EAAC,OAAO;gBACdC,QAAQ,EAAC,MAAM;gBACfG,IAAI,EAAC,MAAM;gBACXF,WAAW,EAAC,0DAAa;gBACzBG,KAAK,EAAE;kBACLL,MAAM,EAAE;gBACV,CAAE;gBACFjD,KAAK,EAAExB,OAAQ;gBACf4E,QAAQ,EAAEnD;cAAoB;gBAAA8B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA;YAC9B;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QACQ,eACZjF,OAAA,CAACb,KAAK;cAACmH,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAE;cAACC,IAAI;cAAA1B,QAAA,GACtB9C,IAAI,CAACyE,GAAG,CAAC,CAACnC,GAAG,EAAEoC,KAAK,KAAK;gBACxB,IAAIpE,cAAc,KAAKoE,KAAK,EAAE;kBAC5B,oBACEzG,OAAA,CAAC0G,aAAa;oBAEZJ,IAAI,EAAC,OAAO;oBACZvD,KAAK,EAAER,cAAe;oBACtB4D,QAAQ,EAAExB,qBAAsB;oBAChCgC,MAAM,EAAE/B,sBAAuB;oBAC/BgC,YAAY,EAAEhC;kBAAuB,GALhCP,GAAG;oBAAAS,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,QAMR;gBAEN;gBACA,MAAM4B,SAAS,GAAGxC,GAAG,CAACyC,MAAM,GAAG,EAAE;gBACjC,MAAMC,OAAO,gBACX/G,OAAA,CAACZ,GAAG;kBAEF4H,QAAQ,EAAEP,KAAK,KAAK,CAAE;kBACtBJ,KAAK,EAAE;oBAAEY,UAAU,EAAE;kBAAO,CAAE;kBAC9BC,OAAO,EAAEA,CAAA,KAAMjD,WAAW,CAACI,GAAG,CAAE;kBAAAQ,QAAA,eAEhC7E,OAAA;oBACEmH,aAAa,EAAG1G,CAAC,IAAK;sBACpB,IAAIgG,KAAK,KAAK,CAAC,EAAE;wBACfnE,iBAAiB,CAACmE,KAAK,CAAC;wBACxBjE,iBAAiB,CAAC6B,GAAG,CAAC;wBACtB5D,CAAC,CAAC2G,cAAc,EAAE;sBACpB;oBACF,CAAE;oBAAAvC,QAAA,EAEDgC,SAAS,GAAI,GAAExC,GAAG,CAACgD,KAAK,CAAC,CAAC,EAAE,EAAE,CAAE,KAAI,GAAGhD;kBAAG;oBAAAS,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA;gBACtC,GAfFZ,GAAG;kBAAAS,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QAiBX;gBACD,OAAO4B,SAAS,gBACd7G,OAAA,CAACX,OAAO;kBAACgC,KAAK,EAAEgD,GAAI;kBAAAQ,QAAA,EACjBkC;gBAAO,GADgB1C,GAAG;kBAAAS,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QAEnB,GAEV8B,OACD;cACH,CAAC,CAAC,EACD9E,YAAY,gBACXjC,OAAA,CAAC0G,aAAa;gBACZN,IAAI,EAAC,MAAM;gBACXE,IAAI,EAAC,OAAO;gBACZvD,KAAK,EAAEZ,UAAW;gBAClBgE,QAAQ,EAAE5B,iBAAkB;gBAC5BoC,MAAM,EAAElC,kBAAmB;gBAC3BmC,YAAY,EAAEnC;cAAmB;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QACjC,gBAEFjF,OAAA,CAACsH,YAAY;gBAACC,IAAI,eAAEvH,OAAA,CAACH,YAAY;kBAAAiF,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QAAI;gBAACuC,OAAO,EAAElD,SAAU;gBAAAO,QAAA,EAAC;cAE1D;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QACD;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QACK,eAERjF,OAAA,CAAChB,IAAI,CAAC2G,IAAI;cACR8B,KAAK,EAAC,UAAU;cAChB7B,KAAK,EAAE,CACL;gBAAEC,QAAQ,EAAE,IAAI;gBAAEC,OAAO,EAAE;cAAgB,CAAC,CAC5C;cACFO,KAAK,EAAE;gBACLqB,KAAK,EAAE;cACT,CAAE;cAAA7C,QAAA,eAqEF7E,OAAA,CAACf,MAAM;gBACLiH,WAAW,EAAC,0BAAM;gBAClBnD,KAAK,EAAEtB,QAAS;gBAChB0E,QAAQ,EAAElD,oBAAqB;gBAC/B2C,KAAK,EAAE,CACL;kBAAEC,QAAQ,EAAE,IAAI;kBAAEC,OAAO,EAAE;gBAAe,CAAC,CAC3C;gBAAAjB,QAAA,gBAEF7E,OAAA,CAACG,MAAM;kBAAC4C,KAAK,EAAC,IAAI;kBAAA8B,QAAA,EAAC;gBAAI;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QAAS,eAChCjF,OAAA,CAACG,MAAM;kBAAC4C,KAAK,EAAC,SAAS;kBAAA8B,QAAA,EAAC;gBAAG;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QAAS,eACpCjF,OAAA,CAACG,MAAM;kBAAC4C,KAAK,EAAC,QAAQ;kBAAA8B,QAAA,EAAC;gBAAI;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QAAS,eACpCjF,OAAA,CAACG,MAAM;kBAAC4C,KAAK,EAAC,UAAU;kBAAA8B,QAAA,EAAC;gBAAI;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QAAS,eACtCjF,OAAA,CAACG,MAAM;kBAAC4C,KAAK,EAAC,UAAU;kBAAA8B,QAAA,EAAC;gBAAK;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QAAS,eACvCjF,OAAA,CAACG,MAAM;kBAAC4C,KAAK,EAAC,MAAM;kBAAA8B,QAAA,EAAC;gBAAE;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QAAS;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA;YACzB;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QACC,eAEZjF,OAAA,CAAChB,IAAI,CAAC2G,IAAI;cACR5B,IAAI,EAAC,QAAQ;cACb0D,KAAK,EAAC,QAAQ;cACdE,aAAa,EAAC,UAAU;cACxBC,iBAAiB,EAAEpH,QAAS;cAC5BoF,KAAK,EAAE,CAAC;gBAAEC,QAAQ,EAAE,IAAI;gBAAEC,OAAO,EAAE;cAAe,CAAC,CAAE;cACrDO,KAAK,EAAE;gBACLwB,SAAS,EAAE;cACb,CAAE;cAAAhD,QAAA,eAEF7E,OAAA,CAACd,MAAM;gBACL6E,IAAI,EAAC,MAAM;gBACX+D,YAAY,EAAGtE,IAAI,IAAK;kBACtBD,iBAAiB,CAACC,IAAI,CAAC;kBACvB,OAAO,KAAK;gBACd,CAAE;gBACFuE,QAAQ,EAAC,SAAS;gBAAAlD,QAAA,eAElB7E,OAAA,CAACjB,MAAM;kBAACwI,IAAI,eAAEvH,OAAA,CAACV,cAAc;oBAAAwF,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,QAAI;kBAAAJ,QAAA,EAAC;gBAAe;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA;cAAS;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA;YACnD;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QACC,eAEZjF,OAAA,CAAChB,IAAI,CAAC2G,IAAI;cAACpF,UAAU,EAAE;gBAAED,IAAI,EAAE,EAAE;gBAAE0H,MAAM,EAAE;cAAE,CAAE;cAAAnD,QAAA,eAC7C7E,OAAA,CAACb,KAAK;gBAAA0F,QAAA,gBACJ7E,OAAA,CAACjB,MAAM;kBACLqH,IAAI,EAAC,SAAS;kBACd6B,QAAQ,EAAC,QAAQ;kBACjBT,OAAO,EAAEA,CAAA,KAAMtE,eAAe,CAAC7B,KAAK,CAAE;kBAAAwD,QAAA,EACvC;gBAED;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QAAS,eACTjF,OAAA,CAACjB,MAAM;kBAACkJ,QAAQ,EAAC,OAAO;kBAAApD,QAAA,EAAC;gBAAK;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QAAS;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA;YACjC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QACE;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QACP;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACF;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACJ;EAAA,gBACT;AAEP;AAAC/D,EAAA,CA7WuBD,SAAS;EAAA,QAChBjC,IAAI,CAACoC,OAAO,EAaVxB,WAAW;AAAA;AAAAsI,EAAA,GAdNjH,SAAS;AA+WjC,MAAMiE,SAAS,GAAGzF,MAAM,CAAC0I,GAAI;AAC7B;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GALIlD,SAAS;AAOf,MAAMC,IAAI,GAAG1F,MAAM,CAAC0I,GAAI;AACxB;AACA;AACA;AACA;AACA,CAAC;AAACE,GAAA,GALIlD,IAAI;AAOV,MAAMY,KAAK,GAAGtG,MAAM,CAAC6I,QAAS;AAC9B,YAAaC,KAAK,IAAKA,KAAK,CAACvC,MAAM,IAAI,MAAO;AAC9C,WAAYuC,KAAK,IAAKA,KAAK,CAACb,KAAK,IAAI,QAAS;AAC9C;AACA;AACA;AACA;AACA,eAAgBa,KAAK,IAAKA,KAAK,CAACtC,QAAQ,IAAI,MAAO;AACnD;AACA;AACA;AACA;AACA,CAAC;AAACuC,GAAA,GAZIzC,KAAK;AAcX,MAAMW,aAAa,GAAGjH,MAAM,CAAC0I,GAAI;AACjC;AACA;AACA;AACA;AACA,CAAC;AAACM,GAAA,GALI/B,aAAa;AAOnB,MAAMY,YAAY,GAAG7H,MAAM,CAAC0I,GAAI;AAChC;AACA;AACA;AACA,CAAC;AAACO,GAAA,GAJIpB,YAAY;AAAA,IAAAY,EAAA,EAAAE,GAAA,EAAAC,GAAA,EAAAG,GAAA,EAAAC,GAAA,EAAAC,GAAA;AAAAC,YAAA,CAAAT,EAAA;AAAAS,YAAA,CAAAP,GAAA;AAAAO,YAAA,CAAAN,GAAA;AAAAM,YAAA,CAAAH,GAAA;AAAAG,YAAA,CAAAF,GAAA;AAAAE,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}