{"ast":null,"code":"var _jsxFileName = \"/Users/yoonezi/Documents/fe/velogFE/src/pages/WritePost.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Button, Form, Select, Upload, Space, Tag, Tooltip, theme, Input } from \"antd\";\nimport { UploadOutlined } from \"@ant-design/icons\";\nimport Header from \"../Common/Header/Header\";\nimport NavHeader from \"../Common/Header/NavHeader/NavHeader\";\nimport styled from \"styled-components\";\nimport Layouts from \"../Common/Layout\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\nconst formItemLayout = {\n  labelCol: {\n    span: 6\n  },\n  wrapperCol: {\n    span: 14\n  }\n};\nexport default function WritePost() {\n  _s();\n  // title, content, category, image\n  const [form] = Form.useForm();\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [uploadedImages, setUploadedImages] = useState([]);\n\n  // tag\n  const {\n    token\n  } = theme.useToken();\n  const [tags, setTags] = useState([\"Unremovable\", \"Backend\", \"Server\"]);\n  const [inputVisible, setInputVisible] = useState(false);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [editInputIndex, setEditInputIndex] = useState(-1);\n  const [editInputValue, setEditInputValue] = useState(\"\");\n  const inputRef = useRef(null);\n  const editInputRef = useRef(null);\n  const navigate = useNavigate();\n  const handleTitleChange = event => {\n    setTitle(event.currentTarget.value);\n    console.log(\"title: \", event.currentTarget.value);\n  };\n  const handleContentChange = event => {\n    setContent(event.currentTarget.value);\n    console.log(\"content: \", event.currentTarget.value);\n  };\n  const handleCategoryChange = value => {\n    setCategory(value);\n    console.log(\"category: \", value);\n  };\n  const handleWritePost = async () => {\n    try {\n      const filteredTags = tags.filter(tag => tag !== \"Unremovable\");\n      const addedImages = uploadedImages.filter(image => image.status === \"done\");\n      const postParam = {\n        title,\n        content,\n        tagList: filteredTags,\n        categoryType: category,\n        postImageRequestList: addedImages.map(image => ({\n          url: image.url,\n          uid: image.uid,\n          name: image.name,\n          status: \"done\"\n        }))\n      };\n      const response = await axios.post(\"http://localhost:8080/api/post\", postParam);\n      console.log(response);\n    } catch (error) {\n      console.error(\"API 호출 실패:\", error);\n    }\n  };\n  const handleImageUpload = async file => {\n    try {\n      const formData = new FormData();\n      formData.append(\"multipartFile\", file);\n      const response = await axios.post(\"http://localhost:8080/api/upload/image/post\", formData);\n      console.log(\"Image upload response:\", response);\n      setUploadedImages(prevImages => [...prevImages, {\n        url: response.data.url,\n        uid: file.uid,\n        name: file.name,\n        status: \"done\"\n      }]);\n      return response.data.url;\n    } catch (error) {\n      console.error(\"Image upload failed:\", error);\n      throw error;\n    }\n  };\n  const handleImageRemove = file => {\n    setUploadedImages(prevImages => prevImages.filter(image => image.uid !== file.uid));\n  };\n  const normFile = e => {\n    console.log(\"Upload event:\", e);\n    if (Array.isArray(e)) {\n      setUploadedImages(e);\n      return e;\n    }\n    return e === null || e === void 0 ? void 0 : e.fileList;\n  };\n  useEffect(() => {\n    if (inputVisible) {\n      var _inputRef$current;\n      (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n    }\n  }, [inputVisible]);\n  useEffect(() => {\n    var _editInputRef$current;\n    (_editInputRef$current = editInputRef.current) === null || _editInputRef$current === void 0 ? void 0 : _editInputRef$current.focus();\n  }, [editInputValue]);\n  const handleClose = removedTag => {\n    const newTags = tags.filter(tag => tag !== removedTag);\n    console.log(newTags);\n    setTags(newTags);\n  };\n  const showInput = () => {\n    setInputVisible(true);\n  };\n  const handleInputChange = e => {\n    setInputValue(e.target.value);\n  };\n  const handleInputConfirm = () => {\n    if (inputValue && !tags.includes(inputValue)) {\n      setTags([...tags, inputValue]);\n    }\n    setInputVisible(false);\n    setInputValue(\"\");\n  };\n  const handleEditInputChange = e => {\n    setEditInputValue(e.target.value);\n  };\n  const handleEditInputConfirm = () => {\n    const newTags = [...tags];\n    newTags[editInputIndex] = editInputValue;\n    setTags(newTags);\n    setEditInputIndex(-1);\n    setEditInputValue(\"\");\n  };\n  const tagInputStyle = {\n    width: 64,\n    height: 22,\n    marginInlineEnd: 8,\n    verticalAlign: \"top\"\n  };\n  const tagPlusStyle = {\n    height: 22,\n    background: token.colorBgContainer,\n    borderStyle: \"dashed\"\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Layouts, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Body, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            form: form,\n            name: \"validateOnly\",\n            layout: \"vertical\",\n            autoComplete: \"off\",\n            ...formItemLayout,\n            onFinish: onFinish,\n            initialValues: {\n              name: \"\",\n              age: \"\",\n              select: undefined,\n              upload: null\n            },\n            children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n              rules: [{\n                required: true,\n                message: \"제목을 입력해주세요.\"\n              }],\n              children: /*#__PURE__*/_jsxDEV(InputArea, {\n                height: \"54px\",\n                fontSize: \"30px\",\n                placeholder: \"\\uC81C\\uBAA9\",\n                value: title,\n                onChange: handleTitleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              rules: [{\n                required: true,\n                message: \"본문을 입력해주세요.\"\n              }],\n              children: /*#__PURE__*/_jsxDEV(InputArea, {\n                height: \"800px\",\n                fontSize: \"14px\",\n                type: \"text\",\n                placeholder: \"\\uBCF8\\uBB38\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694!\",\n                style: {\n                  height: \"400px\"\n                },\n                value: content,\n                onChange: handleContentChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Space, {\n              size: [0, 8],\n              wrap: true,\n              children: [tags.map((tag, index) => {\n                if (editInputIndex === index) {\n                  return /*#__PURE__*/_jsxDEV(Input, {\n                    ref: editInputRef,\n                    size: \"small\",\n                    style: tagInputStyle,\n                    value: editInputValue,\n                    onChange: handleEditInputChange,\n                    onBlur: handleEditInputConfirm,\n                    onPressEnter: handleEditInputConfirm\n                  }, tag, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 23\n                  }, this);\n                }\n                const isLongTag = tag.length > 20;\n                const tagElem = /*#__PURE__*/_jsxDEV(Tag, {\n                  closable: index !== 0,\n                  style: {\n                    userSelect: \"none\"\n                  },\n                  onClose: () => handleClose(tag),\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    onDoubleClick: e => {\n                      if (index !== 0) {\n                        setEditInputIndex(index);\n                        setEditInputValue(tag);\n                        e.preventDefault();\n                      }\n                    },\n                    children: isLongTag ? `${tag.slice(0, 20)}...` : tag\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 277,\n                    columnNumber: 23\n                  }, this)\n                }, tag, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 21\n                }, this);\n                return isLongTag ? /*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: tag,\n                  children: tagElem\n                }, tag, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 21\n                }, this) : tagElem;\n              }), inputVisible ? /*#__PURE__*/_jsxDEV(Input, {\n                ref: inputRef,\n                type: \"text\",\n                size: \"small\",\n                style: tagInputStyle,\n                value: inputValue,\n                onChange: handleInputChange,\n                onBlur: handleInputConfirm,\n                onPressEnter: handleInputConfirm\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(Tag, {\n                style: tagPlusStyle,\n                icon: /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 27\n                }, this),\n                onClick: showInput,\n                children: \"New Tag\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              label: \"Category\",\n              rules: [{\n                required: true,\n                message: \"카테고리를 선택해주세요.\"\n              }],\n              style: {\n                width: \"400px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                placeholder: \"\\uCE74\\uD14C\\uACE0\\uB9AC\",\n                value: category,\n                onChange: handleCategoryChange,\n                rules: [{\n                  required: true,\n                  message: \"이미지를 선택해주세요.\"\n                }],\n                children: [/*#__PURE__*/_jsxDEV(Option, {\n                  value: \"AI\",\n                  children: \"\\uC778\\uACF5\\uC9C0\\uB2A5\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Option, {\n                  value: \"BACKEND\",\n                  children: \"\\uBC31\\uC5D4\\uB4DC\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 338,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Option, {\n                  value: \"DEVOPS\",\n                  children: \"\\uB370\\uBE0C\\uC635\\uC2A4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 339,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Option, {\n                  value: \"EMBEDDED\",\n                  children: \"\\uC784\\uBCA0\\uB514\\uB4DC\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 340,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Option, {\n                  value: \"FRONTEND\",\n                  children: \"\\uD504\\uB860\\uD2B8\\uC5D4\\uB4DC\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Option, {\n                  value: \"GAME\",\n                  children: \"\\uAC8C\\uC784\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 342,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              name: \"upload\",\n              label: \"Upload\",\n              valuePropName: \"fileList\",\n              getValueFromEvent: normFile,\n              rules: [{\n                required: true,\n                message: \"이미지를 선택해주세요.\"\n              }],\n              style: {\n                textAlign: \"left\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Upload, {\n                name: \"logo\",\n                beforeUpload: file => {\n                  handleImageUpload(file);\n                  return false;\n                },\n                listType: \"picture\",\n                onChange: info => {\n                  if (info.file.status === \"removed\") {\n                    handleImageRemove(info.file);\n                  }\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 369,\n                    columnNumber: 33\n                  }, this),\n                  children: \"Click to upload\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 369,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              wrapperCol: {\n                span: 12,\n                offset: 6\n              },\n              children: /*#__PURE__*/_jsxDEV(Space, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  type: \"primary\",\n                  htmlType: \"submit\",\n                  onClick: () => handleWritePost(title),\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 375,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  htmlType: \"reset\",\n                  children: \"reset\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 382,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(WritePost, \"PHIHTkUtNwfVYd1ZI6XVAKQ7KUk=\", false, function () {\n  return [Form.useForm, theme.useToken, useNavigate];\n});\n_c = WritePost;\nconst Container = styled.div`\n  min-width: 1050px;\n  margin-top: 30px;\n  margin-bottom: 60px;\n  display: flex;\n`;\n_c2 = Container;\nconst Body = styled.div`\n  width: 100%;\n  margin: 0px auto;\n  letter-spacing: -0.6px;\n  text-align: center;\n`;\n_c3 = Body;\nconst InputArea = styled.textarea`\n  height: ${props => props.height || \"44px\"};\n  width: ${props => props.width || \"1000px\"};\n  padding: 0px 11px 1px 15px;\n  border: none;\n  border-bottom: 1px solid rgb(221, 221, 221);\n  font-weight: 400;\n  font-size: ${props => props.fontSize || \"16px\"};\n  line-height: 1.6;\n  color: rgb(51, 51, 51);\n  outline: none;\n  resize: none;\n`;\n_c4 = InputArea;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"WritePost\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Body\");\n$RefreshReg$(_c4, \"InputArea\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Button","Form","Select","Upload","Space","Tag","Tooltip","theme","Input","UploadOutlined","Header","NavHeader","styled","Layouts","axios","useNavigate","PlusOutlined","jsxDEV","_jsxDEV","Fragment","_Fragment","Option","formItemLayout","labelCol","span","wrapperCol","WritePost","_s","form","useForm","title","setTitle","content","setContent","category","setCategory","uploadedImages","setUploadedImages","token","useToken","tags","setTags","inputVisible","setInputVisible","inputValue","setInputValue","editInputIndex","setEditInputIndex","editInputValue","setEditInputValue","inputRef","editInputRef","navigate","handleTitleChange","event","currentTarget","value","console","log","handleContentChange","handleCategoryChange","handleWritePost","filteredTags","filter","tag","addedImages","image","status","postParam","tagList","categoryType","postImageRequestList","map","url","uid","name","response","post","error","handleImageUpload","file","formData","FormData","append","prevImages","data","handleImageRemove","normFile","e","Array","isArray","fileList","_inputRef$current","current","focus","_editInputRef$current","handleClose","removedTag","newTags","showInput","handleInputChange","target","handleInputConfirm","includes","handleEditInputChange","handleEditInputConfirm","tagInputStyle","width","height","marginInlineEnd","verticalAlign","tagPlusStyle","background","colorBgContainer","borderStyle","children","fileName","_jsxFileName","lineNumber","columnNumber","Container","Body","layout","autoComplete","onFinish","initialValues","age","select","undefined","upload","Item","rules","required","message","InputArea","fontSize","placeholder","onChange","type","style","size","wrap","index","ref","onBlur","onPressEnter","isLongTag","length","tagElem","closable","userSelect","onClose","onDoubleClick","preventDefault","slice","icon","onClick","label","valuePropName","getValueFromEvent","textAlign","beforeUpload","listType","info","offset","htmlType","_c","div","_c2","_c3","textarea","props","_c4","$RefreshReg$"],"sources":["/Users/yoonezi/Documents/fe/velogFE/src/pages/WritePost.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport {\n  Button,\n  Form,\n  Select,\n  Upload,\n  Space,\n  Tag,\n  Tooltip,\n  theme,\n  Input,\n} from \"antd\";\nimport { UploadOutlined } from \"@ant-design/icons\";\nimport Header from \"../Common/Header/Header\";\nimport NavHeader from \"../Common/Header/NavHeader/NavHeader\";\nimport styled from \"styled-components\";\nimport Layouts from \"../Common/Layout\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { PlusOutlined } from \"@ant-design/icons\";\n\nconst { Option } = Select;\n\nconst formItemLayout = {\n  labelCol: {\n    span: 6,\n  },\n  wrapperCol: {\n    span: 14,\n  },\n};\n\nexport default function WritePost() {\n  \n  // title, content, category, image\n  const [form] = Form.useForm();\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [uploadedImages, setUploadedImages] = useState([]);\n\n  // tag\n  const { token } = theme.useToken();\n  const [tags, setTags] = useState([\"Unremovable\", \"Backend\", \"Server\"]);\n  const [inputVisible, setInputVisible] = useState(false);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [editInputIndex, setEditInputIndex] = useState(-1);\n  const [editInputValue, setEditInputValue] = useState(\"\");\n  const inputRef = useRef(null);\n  const editInputRef = useRef(null);\n\n\n  const navigate = useNavigate();\n\n  const handleTitleChange = (event) => {\n    setTitle(event.currentTarget.value);\n    console.log(\"title: \", event.currentTarget.value);\n  };\n\n  const handleContentChange = (event) => {\n    setContent(event.currentTarget.value);\n    console.log(\"content: \", event.currentTarget.value);\n  };\n\n  const handleCategoryChange = (value) => {\n    setCategory(value);\n    console.log(\"category: \", value);\n  };\n\n  const handleWritePost = async () => {\n    try {\n      const filteredTags = tags.filter((tag) => tag !== \"Unremovable\");\n      const addedImages = uploadedImages.filter(\n        (image) => image.status === \"done\"\n      );\n\n      const postParam = {\n        title,\n        content,\n        tagList: filteredTags,\n        categoryType: category,\n        postImageRequestList: addedImages.map((image) => ({\n          url: image.url,\n          uid: image.uid,\n          name: image.name,\n          status: \"done\",\n        })),\n      };\n\n      const response = await axios.post(\n        \"http://localhost:8080/api/post\",\n        postParam\n      );\n\n      console.log(response);\n    } catch (error) {\n      console.error(\"API 호출 실패:\", error);\n    }\n  };\n\n  const handleImageUpload = async (file) => {\n    try {\n      const formData = new FormData();\n      formData.append(\"multipartFile\", file);\n\n      const response = await axios.post(\n        \"http://localhost:8080/api/upload/image/post\",\n        formData\n      );\n\n      console.log(\"Image upload response:\", response);\n\n      setUploadedImages((prevImages) => [\n        ...prevImages,\n        {\n          url: response.data.url,\n          uid: file.uid,\n          name: file.name,\n          status: \"done\",\n        },\n      ]);\n\n      return response.data.url;\n    } catch (error) {\n      console.error(\"Image upload failed:\", error);\n      throw error;\n    }\n  };\n\n  const handleImageRemove = (file) => {\n    setUploadedImages((prevImages) =>\n      prevImages.filter((image) => image.uid !== file.uid)\n    );\n  };\n\n  const normFile = (e) => {\n    console.log(\"Upload event:\", e);\n\n    if (Array.isArray(e)) {\n      setUploadedImages(e);\n      return e;\n    }\n    return e?.fileList;\n  };\n\n  \n  useEffect(() => {\n    if (inputVisible) {\n      inputRef.current?.focus();\n    }\n  }, [inputVisible]);\n\n  useEffect(() => {\n    editInputRef.current?.focus();\n  }, [editInputValue]);\n\n  const handleClose = (removedTag) => {\n    const newTags = tags.filter((tag) => tag !== removedTag);\n    console.log(newTags);\n    setTags(newTags);\n  };\n\n  const showInput = () => {\n    setInputVisible(true);\n  };\n\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const handleInputConfirm = () => {\n    if (inputValue && !tags.includes(inputValue)) {\n      setTags([...tags, inputValue]);\n    }\n    setInputVisible(false);\n    setInputValue(\"\");\n  };\n\n  const handleEditInputChange = (e) => {\n    setEditInputValue(e.target.value);\n  };\n\n  const handleEditInputConfirm = () => {\n    const newTags = [...tags];\n    newTags[editInputIndex] = editInputValue;\n    setTags(newTags);\n    setEditInputIndex(-1);\n    setEditInputValue(\"\");\n  };\n\n  const tagInputStyle = {\n    width: 64,\n    height: 22,\n    marginInlineEnd: 8,\n    verticalAlign: \"top\",\n  };\n  const tagPlusStyle = {\n    height: 22,\n    background: token.colorBgContainer,\n    borderStyle: \"dashed\",\n  };\n\n  return (\n    <>\n      <Header />\n      <NavHeader />\n      <Layouts>\n        <Container>\n          <Body>\n            <Form\n              form={form}\n              name=\"validateOnly\"\n              layout=\"vertical\"\n              autoComplete=\"off\"\n              {...formItemLayout}\n              onFinish={onFinish}\n              initialValues={{\n                name: \"\",\n                age: \"\",\n                select: undefined,\n                upload: null,\n              }}\n            >\n              <Form.Item\n                rules={[{ required: true, message: \"제목을 입력해주세요.\" }]}\n              >\n                <InputArea\n                  height=\"54px\"\n                  fontSize=\"30px\"\n                  placeholder=\"제목\"\n                  value={title}\n                  onChange={handleTitleChange}\n                />\n              </Form.Item>\n              <Form.Item\n                rules={[{ required: true, message: \"본문을 입력해주세요.\" }]}\n              >\n                <InputArea\n                  height=\"800px\"\n                  fontSize=\"14px\"\n                  type=\"text\"\n                  placeholder=\"본문을 입력해주세요!\"\n                  style={{\n                    height: \"400px\",\n                  }}\n                  value={content}\n                  onChange={handleContentChange}\n                />\n              </Form.Item>\n\n              <Space size={[0, 8]} wrap>\n                {tags.map((tag, index) => {\n                  if (editInputIndex === index) {\n                    return (\n                      <Input\n                        ref={editInputRef}\n                        key={tag}\n                        size=\"small\"\n                        style={tagInputStyle}\n                        value={editInputValue}\n                        onChange={handleEditInputChange}\n                        onBlur={handleEditInputConfirm}\n                        onPressEnter={handleEditInputConfirm}\n                      />\n                    );\n                  }\n                  const isLongTag = tag.length > 20;\n                  const tagElem = (\n                    <Tag\n                      key={tag}\n                      closable={index !== 0}\n                      style={{\n                        userSelect: \"none\",\n                      }}\n                      onClose={() => handleClose(tag)}\n                    >\n                      <span\n                        onDoubleClick={(e) => {\n                          if (index !== 0) {\n                            setEditInputIndex(index);\n                            setEditInputValue(tag);\n                            e.preventDefault();\n                          }\n                        }}\n                      >\n                        {isLongTag ? `${tag.slice(0, 20)}...` : tag}\n                      </span>\n                    </Tag>\n                  );\n                  return isLongTag ? (\n                    <Tooltip title={tag} key={tag}>\n                      {tagElem}\n                    </Tooltip>\n                  ) : (\n                    tagElem\n                  );\n                })}\n                {inputVisible ? (\n                  <Input\n                    ref={inputRef}\n                    type=\"text\"\n                    size=\"small\"\n                    style={tagInputStyle}\n                    value={inputValue}\n                    onChange={handleInputChange}\n                    onBlur={handleInputConfirm}\n                    onPressEnter={handleInputConfirm}\n                  />\n                ) : (\n                  <Tag\n                    style={tagPlusStyle}\n                    icon={<PlusOutlined />}\n                    onClick={showInput}\n                  >\n                    New Tag\n                  </Tag>\n                )}\n              </Space>\n\n              <Form.Item\n                label=\"Category\"\n                rules={[\n                  { required: true, message: \"카테고리를 선택해주세요.\" },\n                ]}\n                style={{\n                  width: \"400px\",\n                }}\n              >\n                <Select\n                  placeholder=\"카테고리\"\n                  value={category}\n                  onChange={handleCategoryChange}\n                  rules={[\n                    { required: true, message: \"이미지를 선택해주세요.\" },\n                  ]}\n                >\n                  <Option value=\"AI\">인공지능</Option>\n                  <Option value=\"BACKEND\">백엔드</Option>\n                  <Option value=\"DEVOPS\">데브옵스</Option>\n                  <Option value=\"EMBEDDED\">임베디드</Option>\n                  <Option value=\"FRONTEND\">프론트엔드</Option>\n                  <Option value=\"GAME\">게임</Option>\n                </Select>\n              </Form.Item>\n\n              <Form.Item\n                name=\"upload\"\n                label=\"Upload\"\n                valuePropName=\"fileList\"\n                getValueFromEvent={normFile}\n                rules={[{ required: true, message: \"이미지를 선택해주세요.\" }]}\n                style={{\n                  textAlign: \"left\",\n                }}\n              >\n                <Upload\n                  name=\"logo\"\n                  beforeUpload={(file) => {\n                    handleImageUpload(file);\n                    return false;\n                  }}\n                  listType=\"picture\"\n                  onChange={(info) => {\n                    if (info.file.status === \"removed\") {\n                      handleImageRemove(info.file);\n                    }\n                  }}\n                >\n                  <Button icon={<UploadOutlined />}>Click to upload</Button>\n                </Upload>\n              </Form.Item>\n\n              <Form.Item wrapperCol={{ span: 12, offset: 6 }}>\n                <Space>\n                  <Button\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    onClick={() => handleWritePost(title)}\n                  >\n                    Submit\n                  </Button>\n                  <Button htmlType=\"reset\">reset</Button>\n                </Space>\n              </Form.Item>\n            </Form>\n          </Body>\n        </Container>\n      </Layouts>\n    </>\n  );\n}\n\nconst Container = styled.div`\n  min-width: 1050px;\n  margin-top: 30px;\n  margin-bottom: 60px;\n  display: flex;\n`;\n\nconst Body = styled.div`\n  width: 100%;\n  margin: 0px auto;\n  letter-spacing: -0.6px;\n  text-align: center;\n`;\n\nconst InputArea = styled.textarea`\n  height: ${(props) => props.height || \"44px\"};\n  width: ${(props) => props.width || \"1000px\"};\n  padding: 0px 11px 1px 15px;\n  border: none;\n  border-bottom: 1px solid rgb(221, 221, 221);\n  font-weight: 400;\n  font-size: ${(props) => props.fontSize || \"16px\"};\n  line-height: 1.6;\n  color: rgb(51, 51, 51);\n  outline: none;\n  resize: none;\n`;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}